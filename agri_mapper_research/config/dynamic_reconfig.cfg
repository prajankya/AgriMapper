#!/usr/bin/env python
PACKAGE = "agri_mapper_research"

import roslib

roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("minThreshold", double_t, 0, "Minimum Threshold",    1,  0.0,  100)
gen.add("maxThreshold", double_t, 0, "Maximum Threshold", 1000,  0.0, 3000)
gen.add("minConvexity", double_t, 0, "Minimum Convexity",  0.1,  0.0,  1.0)

size_enum = gen.enum([gen.const("1", int_t, 1, "Kernel Size"),
                      gen.const("3", int_t, 3, "Kernel Size"),
                      gen.const("5", int_t, 5, "Kernel Size"),
                      gen.const("7", int_t, 7, "Kernel Size"),
                      gen.const("9", int_t, 9, "Kernel Size"),
                      gen.const("11", int_t, 11, "Kernel Size"),
                      gen.const("13", int_t, 13, "Kernel Size"),
                      gen.const("15", int_t, 15, "Kernel Size"),
                      gen.const("17", int_t, 17, "Kernel Size"),
                      gen.const("19", int_t, 19, "Kernel Size"),
                      gen.const("21", int_t, 21, "Kernel Size"),
                      gen.const("23", int_t, 23, "Kernel Size"),
                      gen.const("25", int_t, 25, "Kernel Size"),
                      gen.const("27", int_t, 27, "Kernel Size"),
                      gen.const("29", int_t, 29, "Kernel Size"),
                      gen.const("31", int_t, 31, "Kernel Size"),
                      gen.const("33", int_t, 33, "Kernel Size"),
                      gen.const("35", int_t, 35, "Kernel Size"),
                      gen.const("37", int_t, 37, "Kernel Size"),
                      gen.const("39", int_t, 39, "Kernel Size"),
                      gen.const("41", int_t, 41, "Kernel Size"),
                      gen.const("43", int_t, 43, "Kernel Size"),
                      gen.const("45", int_t, 45, "Kernel Size"),
                      gen.const("47", int_t, 47, "Kernel Size"),
                      gen.const("49", int_t, 49, "Kernel Size"),
                      gen.const("51", int_t, 51, "Kernel Size")
                      ],
                     "GaussianBlur kernel Size")

gen.add("GaussianBlur_kernelSize", int_t, 0, "A size parameter which is edited via an enum",
        1, 1, 61, edit_method=size_enum)

exit(gen.generate(PACKAGE, "dynamic_reconfigure_node", "dynRe"))
