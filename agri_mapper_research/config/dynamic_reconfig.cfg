#!/usr/bin/env python
PACKAGE = "agri_mapper_research"

import roslib

roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add( "minCircularity", double_t, 0, "Minimum Circularity",   0.0, 0.0,   1.0)
gen.add( "maxCircularity", double_t, 0, "Maximum Circularity",   0.9, 0.0,   1.0)
gen.add(   "minThreshold", double_t, 0,   "Minimum Threshold",     1, 0.0,   100)
gen.add(   "maxThreshold", double_t, 0,   "Maximum Threshold",   700, 0.0,   700)
gen.add(   "minConvexity", double_t, 0,   "Minimum Convexity",   0.0, 0.0,   1.0)
gen.add(   "maxConvexity", double_t, 0,   "Maximum Convexity",   0.9, 0.0,   1.0)
gen.add(        "minArea", double_t, 0,        "Minimum Area",   0.0, 0.0, 500.0)
gen.add(        "maxArea", double_t, 0,        "Maximum Area", 500.0, 0.0, 500.0)

size_enum = gen.enum([
    gen.const("1", int_t, 1, "Kernel Size"),
    gen.const("3", int_t, 3, "Kernel Size"),
    gen.const("5", int_t, 5, "Kernel Size"),
    gen.const("7", int_t, 7, "Kernel Size"),
    gen.const("9", int_t, 9, "Kernel Size"),
    gen.const("11", int_t, 11, "Kernel Size"),
    gen.const("13", int_t, 13, "Kernel Size"),
    gen.const("15", int_t, 15, "Kernel Size"),
    gen.const("17", int_t, 17, "Kernel Size"),
    gen.const("19", int_t, 19, "Kernel Size"),
    gen.const("21", int_t, 21, "Kernel Size")
],
    "GaussianBlur kernel Size")

gen.add("GaussianBlur_kernelSize", int_t, 0, "A size parameter which is edited via an enum",
        1, 1, 61, edit_method=size_enum)

exit(gen.generate(PACKAGE, "dynamic_reconfigure_node", "dynRe"))
